
'use strict';
define(function (require) {
    var app = require('../../../../../app');

    app.controller('commonServicesCtrl', ['$scope', '$http', '$rootScope', '$location', function ($scope, $http, $rootScope, $location) {
        //配置属性
        var url = $rootScope.url;
        var _productId = JSON.parse(localStorage.getItem("product_id"));
        $http.post(url + '/ProductCommonservice/checkProduct/'+_productId).success(function(data){
            $scope.ProductCommonservice=data;
        }).error(function(data){
        });
        //获取单位名称   BEGIN---------------------------------
        var projectId = null;
        $scope.ProductCommonservice = {};
        $http.get(url + '/Project/getProjectByState').success(function(data) {
            $scope.Project = data.Project;
            projectId = data.Project.projectId;

            //得到在属性配置中的属性
            $http.get(url + '/DataDictionarySlaveService/getDataDictionarySlaveRes/unit/' +projectId).success(function(data){
                $scope.unit= data.DataDictionarySlave;
            });
        });
        //调取单位名称，END——————————————————————
        //提交普通服务数据 BEGIN————————————————————
        var project = sessionStorage.getItem("_project");
        $scope.project = JSON.parse(project);
        var projectId = $scope.project.projectId;
        $scope.btnSubmit = function (){
            if(angular.isUndefined($scope.ProductCommonservice)){
                layer.alert('不能提交空产品',{icon : 0});
                return ;
            }else{
                var pNam = app.get('valueCheck').isNull($scope.ProductCommonservice.commonserviceName);
                if(!pNam.state){
                    layer.msg('产品名称' + pNam.info, {icon : 0,time : 1000});
                    return;
                }
                var pStp = app.get('valueCheck').isNull($scope.ProductCommonservice.productServicetype);
                if(!pStp.state){
                    layer.msg('请选择服务类别', {icon : 0,time : 1000});
                    return;
                }
                var pUit = app.get('valueCheck').isNull($scope.ProductCommonservice.productUnit);
                if(!pUit.state){
                    layer.msg('请选择单位', {icon : 0,time : 1000});
                    return;
                }
                var pPrc = app.get('valueCheck').isNull($scope.ProductCommonservice.productPrice);
                if(!pPrc.state){
                    layer.msg('产品单价' + pPrc.info, {icon : 0,time : 1000});
                    return;
                }
                var pEffect = app.get('valueCheck').isNull($scope.ProductCommonservice.productBeginDate);
                if(!pEffect.state){
                    layer.msg('请选择启用时间',{icon : 0,time : 1000});
                    return;
                }
                var bdate=$scope.ProductCommonservice.productBeginDate;
                var edate=$scope.ProductCommonservice.productEndDate;
                var nowdate=new Date();
                var strb= new Array();
                strb=bdate.split("-");
                var y=nowdate.getFullYear();//年份
                if(strb[0]<y)
                {
                    layer.alert("启用时间不能为现在之前！",{icon:1,time:2000});
                    return;
                }
                var m=nowdate.getMonth()+1;   //月份
                if(strb[0]<=y&&strb[1]<m)
                {
                    layer.alert("启用时间不能为现在之前！",{icon:1,time:2000});
                    return;
                }
                var d=nowdate.getDate();    //日
                if(strb[0]<=y&&strb[1]<=m&&strb[2]<d)
                {
                    layer.alert("启用时间不能为现在之前！",{icon:1,time:2000});
                    return;
                }
                if(edate!=""){
                    if(bdate>edate)
                    {
                        layer.alert("请注意启用时间与失效时间的顺序！",{icon:1,time:2000});
                        return;
                    }
                }

            }
            var x="1";//修改或新增判断用
            $scope.ProductCommonservice.commonserviceId=projectId;
            $scope.ProductCommonservice.productCode='';
            $http.post(url + "/ProductCommonservice/addProductCommon",{ProductCommonservice:$scope.ProductCommonservice}).success(function(data){
               if(_productId!=""){
                    $scope.ProductCommonservice.commonserviceId=_productId;
                    $http.post(url + '/ProductCommonservice/updateProduct',{ProductCommonservice:$scope.ProductCommonservice}).success(function(data){

                        layer.msg('更改成功！',{icon : 1,time : 2000});

                        $location.path("/index/accountManagement/productAndProperty/product");
                    }
                    ).error(function(data){
                        alert('请重试！'+data.toString());
                    } );
                   x="2";
                }
                if(data.code=="1"){
                    layer.msg('新增成功！',{icon : 1,time : 1000});
                    $location.path("/index/accountManagement/productAndProperty/product");
                }
                if(x=="1"){
                if(data.code=="0"){

                   layer.alert("名称重复!",{icon:1,time:1000});
               }}
            }).error(function(){
                layer.alert("新增失败!",{icon:1,time:2000});
            });

        }
        //提交普通服务数据 END——————————————————————
        //取消新增
        $scope.btnCancle=function(){
           $location.path("/index/accountManagement/productAndProperty/product");
        };
    }]);

});