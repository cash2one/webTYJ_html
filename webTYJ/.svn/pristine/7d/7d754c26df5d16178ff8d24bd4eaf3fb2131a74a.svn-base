/**
 * Created by XC on 2018/1/18.
 * 房屋信息里的租赁
 */

'use strict';

define(function (require) {
    var app = require('../../../../../app');

    app.controller('leaseAddCtrl', ['$scope', '$http','$rootScope','$location', function ($scope,$http,$rootScope,$location) {

        var fileUrl=$rootScope.fileUrl;    //上传的文件路径
        var filePath='';          //上传文件的路径
        var url = $rootScope.url;
        $scope.search={page:{}};

        //查询房屋
        $scope.PersonBuildingNew = {};
        $scope.PersonBuildingNew.custId = $scope.personCust.custId;
        $scope.PersonBuildingNew.projectType='20cdcd6e-69b6-4178-9e2f-44078c899507';
        $scope.selectHouse=function(){
            $http.post(url + '/PersonBuildingNew/selectPersonBuildingNewByCustId',{PersonBuildingNew : $scope.PersonBuildingNew}).success(function(data){
                $scope.buildingStructure = data.PersonBuildingNew;
                //    console.log($scope.buildingStructure);
                $('#myModale').modal({backdrop: 'static', keyboard: false});
            }).error(function(data){
                layer.msg("没有关联的建筑",{icon : 3,time : 2000});
            });
        };

        //选中房屋
        $scope.houseone={};

        $scope.choiceHouse=function(house){
            //    console.log("点击房屋事件");
            $scope.btnIndex = house.id;
            $scope.houseone=house;
            // console.log($scope.houseone);
            $scope.addLease.honseId= $scope.houseone.houseNew.id;
            $scope.addLease.houseAddress = $scope.houseone.fullName;
            //var housingProperty = $scope.houseone.capitalType;
            //if(housingProperty==1){
            //    $("input[name=housingProperty]").val("住宅");
            //}else if(housingProperty==2){
            //    $("input[name=housingProperty]").val("商铺");
            //}
        };

        //获取选择房屋的业主（人员建筑关系信息）
        $scope.selectPersonBuilding=function(){
            $http.get(url + '/PersonBuildingNew/listPersonBuildingNewone/'+$scope.houseone.buildingStructureId).success(function(data) {
                //     console.log("搜索人员建筑关系成功");
                $scope.personsnew=data.PersonBuildingNew;
                //    console.log($scope.personsnew);
                for(var i=0;i<$scope.personsnew.length;i++){
                    if($scope.personsnew[i].custType=="业主" && $scope.personsnew[i].state==0){
                        $scope.addLease.custId=$scope.personsnew[i].personCustNew.custId;
                        //           console.log($scope.addLease.custId);
                    }
                }
            }).error(function(){
                //         console.log("搜索人员建筑关系失败")
            });
        };

        /**
         * 人员搜索信息重置
         * @type {{page: {}}}
         */
        $scope.ryssqc=function(){
            $scope.currentPaginator={};
        };
        //根据条件搜索人员信息
        $scope.searchone={page:{}};
        $scope.selectPerson=function(){
            var parent = function (page, callback) {
                $scope.searchone.page = page;
                $http.post(url+'/PersonCustNew/listPagelistSearchPersonCust',{PersonCustNew:$scope.searchone}).success(callback);
            };
            $scope.currentPaginator = app.get('Paginator').list(parent,4);
            //       console.log($scope.currentPaginator);

            /* $http.post(url+'/PersonCustNew/listPagelistSearchPersonCust',{PersonCustNew:$scope.searchone}).success(function(data)
             {
             console.log("搜索成功");
             $scope.person=data.PersonCustNew;
             console.log($scope.person);

             });*/
        };

        //选中人员
        /*$scope.personone={};*/
        $scope.persons=[];
        $scope.choicePerson=function(person) {
            // $scope.btnIndex = person;
            // if ($scope.notrepeat($scope.persons, person)) {
            //     $scope.persons.push(person);
            // }
            // else {
            //     layer.alert('人员重复，请重新选择人员',{icon : 0});
            //     console.log($scope.persons);
            // }

            $scope.notrepeat($scope.persons, person);
        };
        var getNames = function(){
            if($scope.persons != null && $scope.persons.length>0){//获取租客名称
                var custs = '';
                for(var i=0;i<$scope.persons.length;i++){
                    custs+=$scope.persons[i].name+',';
                }
                var names = custs.substring(0,custs.length-1);
                //       console.log(names);
            }
            return names;
        }


        //添加租赁
        $scope.addLease={};//新增租赁对象
        $scope.addLease.personBuildingNew=[];
        $scope.insertLease=function() {
            $scope.addLease.custId = $rootScope.user.custId;
            if(angular.isUndefined($scope.addLease.rent)){
                $scope.addLease.rent=0;
            }
            if(angular.isUndefined($scope.addLease.hireStartDate)){
                layer.msg('租赁开始日期未输入',{icon:0});
                return;
            }
            if(angular.isUndefined($scope.addLease.hireFinishDate)){
                layer.msg('租赁结束日期未输入',{icon:0});
                return;
            }
            if($scope.addLease.hireFinishDate-$scope.addLease.hireStartDate<0){
                layer.msg('租赁结束开始不能在租赁开始日期之前',{icon:0});
                return;
            }
            if(angular.isUndefined($scope.addLease.honseId)||angular.equals($scope.addLease.honseId,'')){
                layer.msg('租赁房屋未选择',{icon:0});
                return;
            }
            if($scope.persons.length==0){
                layer.msg('请选择租户信息',{icon:0});
                return;
            }else{
                for (var i = 0; i < $scope.persons.length; i++) {
                    var addPersonBuildingNew = {};//新增人员建筑关系
                    addPersonBuildingNew.buildingStructureId = $scope.houseone.buildingStructureId;
                    addPersonBuildingNew.custType = "租客";
                    addPersonBuildingNew.state = 0;
                    addPersonBuildingNew.custId = $scope.persons[i].custId;
                    addPersonBuildingNew.name = $scope.persons[i].name;
                    $scope.addLease.personBuildingNew.push(addPersonBuildingNew);
                }
            }

            $http.post(url + '/NewLease/insertNewLeaseRestful', {NewLease: $scope.addLease}).success(function () {
                layer.msg('提交成功',{icon : 1,time : 2000});
                $location.path("/index/propertyService/staffHome/lease/leaseHistory");
            }).error(function (data, status, headers, config) {
                layer.msg("提交失败",{icon : 3,time : 2000});
            });

        }
        /**
         * 将输入数字保留两位小数
         */
        $scope.formatRent = function(){
            var num = $("input[name=rent]").val();
            //       console.log(num);
            var val = $filter('number')(num,2);
            var val1 = val.replace(/,/g, "");
            //     console.log(val1);
            $("input[name=rent]").val(val1);
        }

        //取消数据增加
        $scope.resetAddEntrance=function(){
            $scope.addEntrance={};
            $scope.search={};
            $scope.houseone={};
            $scope.personBuildingNew={};
            $scope.house=[];
            $scope.err="";
            //      console.log("重置成功");
            $scope.addLeass = [];
            $scope.persons = [];
            $scope.addLease.rent=null;
            $scope.addLease.hireStartDate=null;
            $scope.addLease.hireFinishDate=null;
        };

        /**
         * 存放选中的信息
         * @param persons
         * @param person
         */
        $scope.notrepeat=function(persons,person){
            if(person.custId==$rootScope.user.custId){
                layer.msg('该选中的用户是业主，无法成为租客');
                return;
            }
            var j=0;
            for ( var i = 0; i < $scope.persons.length; i++) {
                if ($scope.persons[i].custId == person.custId) {
                    //j = 1;
                    $scope.persons.splice(i, 1);
                    j=1;
                }
            }
            if(j==0){
                $scope.persons.push(person);
            }
        };

        /**
         * 选中样式
         */
        $scope.chocieCss=function(custId){
            if($scope.persons.length==0){
                return false;
            }
            var j=0;
            for(var i=0;i<$scope.persons.length;i++){
                if($scope.persons[i].custId==custId){
                    j=1;
                }
            }
            if(j==1){
                return true;
            }else{
                return false;
            }
        };

        //打印
        $scope.printNewLease=function(){

        };


        //上传文件
        $(function(){
            // 初始化插件
            $("#zyupload").zyUpload({

                itemWidth        :   "140px",                 // 文件项的宽度
                itemHeight       :   "115px",                 // 文件项的高度
                url              :   fileUrl+"/FileService",  // 上传文件的路径
                fileType         :   ["jpg","png","jpeg","gif","xls","docx","xlsx","pdf","txt","doc","ppt"],// 上传文件的类型
                fileSize         :   51200000,                // 上传文件的大小
                multiple         :   true,                    // 是否可以多个文件上传
                dragDrop         :   true,                    // 是否可以拖动上传文件
                tailor           :   true,                    // 是否可以裁剪图片
                del              :   true,                    // 是否可以删除文件
                finishDel        :   false,  				  // 是否在上传文件完成后删除预览
                /* 外部获得的回调接口 */
                onSelect: function(selectFiles, allFiles){    // 选择文件的回调方法  selectFile:当前选中的文件  allFiles:还没上传的全部文件

                    console.info(selectFiles);
                },
                onDelete: function(file, files){
                    console.info(file.name);
                },
                onSuccess: function(file, response){          // 文件上传成功的回调方法
                    /*       console.info("此文件上传成功：");*/
                    console.info(file.name);
                    /*     console.info("此文件上传到服务器地址：");*/
                    filePath=response;
                    console.info(filePath);
                    /*     $("#uploadInf").append("<p>上传成功，文件地址是：" + filePath + "</p>");*/
                },
                onFailure: function(file, response){          // 文件上传失败的回调方法
                    /*     console.info("此文件上传失败：");
                     console.info(file.name);*/
                },
                onComplete: function(response){           	  // 上传完成的回调方法
                    /*           console.info("文件上传完成");
                     console.info(response);*/
                }
            });

        });

    }]);
});