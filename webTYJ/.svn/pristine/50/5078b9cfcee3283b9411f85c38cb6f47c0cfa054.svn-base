/**
 * Created by NM on 2018/1/18.
 * 装修管理
 */

'use strict';

define(function (require) {
    var app = require('../../../../app');

    app.controller('newDecorateServiceRequestManagementCtrl', ['$scope', '$http','$rootScope','$location', function ($scope,$http,$rootScope,$location) {

        $scope.show1=true;
        $scope.show2=false;
        $scope.decorate1=function(){
            $scope.show1=true;
            $scope.show2=false;
        };
        $scope.addDecorate1=function(){
            $scope.show1=false;
            $scope.show2=true;
        };

        $scope.lookOwner=function(){
            $location.path('"/index/serviceRequest/newDecorateManagement/newOwnerDecorateService"')
        };

        var url=$rootScope.url;
        $scope.ServiceRequest = {page:{}};
        $scope.ServiceRequest.serviceRequestType = 1;
        $scope.load = function(){

            var fetchFunction = function (page, callback) {
                $scope.ServiceRequest.page = page;
                $http.post(url + '/ServiceRequest/listPageServiceRequestbyDecoration', {ServiceRequest:$scope.ServiceRequest}).success(callback)

            };
            $scope.searchPaginator = app.get('Paginator').list(fetchFunction,6);
            console.log($scope.searchPaginator);

        };

        $scope.load();

        //查看任务
        $scope.selectTasks = function (serviceRequest) {
            console.log(serviceRequest);
            if(serviceRequest!=null){
                $location.path("/index/serviceRequest/decorationManagement");
                $rootScope.serviceDecoration=serviceRequest;
            }else{
                alert("无效的服务ID！");
            }
        };
        $scope.Datil={
            /**任务类型**/
            taskType: [
                { id:'0',name:'园林' },
                { id:'1',name:'维修' },
                { id:'2',name:'护管' },
                { id:'11',name:'清洁' },
                { id:'12',name:'回访'},
                { id:'13',name:'投诉'},
                { id:'16',name:'抄水表'},
                { id:'17',name:'抄电表'},
                { id:'10',name:'向业主索赔'},
                { id:'9',name:'赔偿给业主'},
                { id:'19',name:'固定车位'},
                //{ id: '3',name:'部门质检' },
                //{ id: '4',name:'装修巡检' },
                //{ id: '5',name:'装修验收' },
                //{ id: '6',name:'施工巡检' },
                //{ id: '7',name:'施工核查' },
                //{ id: '8',name:'施工验收' },
                //{id:'14',name:'验房'},
                //{id:'15',name:'咨询'},
            ]
        };

        //查询重大事项类型
        $http.get(url + '/ImportantEventType/getAllImportantEventType').success(function(data) {
            $scope.important=[];
            $scope.important= data.ImportantEventType;
            console.log(data);
        });
        $scope.getValue=function(){
            var tt=document.getElementsByName("ims");
            for(var i=0;i<tt.length;i++){
                if(tt[i].checked === true) {
                    $scope.ServiceRequest.importantEvent = 1;
                    $scope.impro=true;
                }else{
                    $scope.impro=false;
                }
            }

        };

        /********************************************************************************************************************/
        //查询所有建筑结构信息.
        $http.get(url+'/BuildingStructureNew/listAllBuildingStructureNewByAllIdOptimize/'+$scope.id).success(function(data){
            $scope.zNodes =[{}];
            //获取json数据
            $scope.buildingStructureNews = data.BuildingStructureNew;
            var tasks =  $scope.buildingStructureNews;
            if(tasks!=null){
                for(var i=0;i<tasks.length;i++){
                    $scope.zNode ={ id:tasks[i].id, pId:tasks[i].parentId, name:tasks[i].nodeName,fullname:tasks[i].fullName,checked:tasks[i].checked};
                    $scope.zNodes.push($scope.zNode);
                }
                $.fn.zTree.init($("#treeDemo"), setting, $scope.zNodes);

                var zTree = $.fn.zTree.getZTreeObj("treeDemo");
                var nodes = zTree.getNodes();
                nodes[0].name = "建筑信息";
                zTree.updateNode(nodes[0]);
            }
        }).error(function(data,status,headers,config){
            alert("建筑信息查询失败！")
        });

        /**
         * 显示树状结构
         */
        //得到选中的数据
        var zTreeOnCheck=function(event, treeId, treeNode) {
            var treeObj=$.fn.zTree.getZTreeObj("treeDemo");
            var nodes=treeObj.getCheckedNodes(true);
            $scope.treeResult={treeList:[]};
            for(var i=0;i<nodes.length;i++){
                if(nodes[i].isParent==false) {
                    $scope.treeResult.treeList.push(nodes[i]);
                }
                if(nodes[i].check_Child_State == -1)
                {
                    $scope.addressId=nodes[i].id;
                    console.log($scope.addressId);
                }
            }
            console.log($scope.treeResult.treeList);
            $scope.bslist=$scope.treeResult.treeList;
        };
        /**
         * 显示选中的树状数据
         */
        $scope.addWaterReading = function(){
            $scope.addWaterCheck = $scope.treeResult.treeList;
            console.log($scope.addWaterCheck);
        };
        var setting = {
            check:{
                enable:true
            },
            view: {
                selectedMulti: false
            },
            edit: {
                enable: false,
                editNameSelectAll: false,
                showRemoveBtn: showRemoveBtn,
                showRenameBtn: showRenameBtn
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                onCheck:zTreeOnCheck
            }
        };
        function onRename(e, treeId, treeNode, isCancel) {
            showLog((isCancel ? "<span style='color:red'>":"") + "[ "+getTime()+" onRename ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name + (isCancel ? "</span>":""));
        }
        function showRemoveBtn(treeId, treeNode) {
            return !treeNode.isFirstNode;
        }
        function showRenameBtn(treeId, treeNode) {
            return !treeNode.isLastNode;
        }
        function showLog(str) {
            if (!log) log = $("#log");
            log.append("<li class='"+className+"'>"+str+"</li>");
            if(log.children("li").length > 8) {
                log.get(0).removeChild(log.children("li")[0]);
            }
        }
        function getTime() {
            var now= new Date(),
                h=now.getHours(),
                m=now.getMinutes(),
                s=now.getSeconds(),
                ms=now.getMilliseconds();
            return (h+":"+m+":"+s+ " " +ms);
        }

        var newCount = 1;
        function addHoverDom(treeId, treeNode) {
            var sObj = $("#" + treeNode.tId + "_span");
            if (treeNode.editNameFlag || $("#addBtn_"+treeNode.tId).length>0) return;
            var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
                + "' title='add node' onfocus='this.blur();'></span>";
            sObj.after(addStr);
            var btn = $("#addBtn_"+treeNode.tId);
            if (btn) btn.bind("click", function(){
                var zTree = $.fn.zTree.getZTreeObj("treeDemo1");
                zTree.addNodes(treeNode, {id:(100 + newCount), pId:treeNode.id, name:"new node" + (newCount++)});
                return false;
            });
        };

        function selectAll() {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo");
            zTree.setting.edit.editNameSelectAll =  $("#selectAll").attr("checked");
        }

        $(document).ready(function(){
            $("#selectAll").bind("click", selectAll);
        });


        $scope.addReqService=function(customerId){
            //$scope.ServiceRequest.tasks.addressId=$rootScope.addressIdT;
            if($rootScope.addressId != null){
                $scope.ServiceRequest.tasks.addressId=$rootScope.addressId;
            }


            //判断加急状态
            var anxious = document.getElementsByName("anxious");
            for(var i = 0;i<anxious.length;i++){
                if(anxious[i].checked == true){
                    $scope.ServiceRequest.anxious = 1;
                } else{
                    $scope.ServiceRequest.anxious = 0;
                }
            }
            var tt=document.getElementsByName("ims");
            for(var i=0;i<tt.length;i++){
                if(tt[i].checked === true) {
                    $scope.ServiceRequest.importantEvent = 1;
                    $scope.impro=true;
                }else{
                    $scope.ServiceRequest.importantEvent = 0;
                    $scope.impro=false;
                }
            }

            $scope.ServiceRequest.requestSource = "前台";
            $scope.ServiceRequest.directionType = 0;//外部服务
            $scope.ServiceRequest.serviceRequestType = 1;//业主装修
            if(customerId!=null) {
                console.log($scope.ServiceRequest);
                $http.post(url + '/ServiceRequest/insertServiceRequestRestful', {
                    ServiceRequest: $scope.ServiceRequest
                }).success(function (data) {
                    //var addressId = '';
                    if($scope.ServiceRequest.tasks != null){var addressId = $scope.ServiceRequest.tasks.addressId;}
                    //var addressId = $scope.ServiceRequest.tasks.addressId;
                    console.log($scope.ServiceRequest);
                    //alert("添加服务成功！");
                    $scope.show1=true;
                    $scope.show2=false;
                    $scope.load();
                    //$location.path("/index/propertyService/staffHome/serviceRequest/");
                }).error(function (data) {
                    alert("服务器请求失败！");
                });
            }
        };
        /**
         * 服务请求全选按钮功能
         */
        $scope.isAllChecked=false;//判断是否全选,默认否
        $scope.forChangeSR = {serviceRequestIds:[]};
        $scope.allChecked = function(){
            //console.log($scope.currentMeterReadingSR);
            $scope.forChangeSR.serviceRequestIds=[];
            $scope.isAllChecked = true;
            var items = $scope.searchPaginator.object.serviceRequests;
            if(items!=null && items.length>0){
                for(var i=0;i<items.length;i++){
                    if(items[i].serviceRequestId != null){
                        $scope.forChangeSR.serviceRequestIds.push(items[i].serviceRequestId);
                    }
                }
            }
            console.log($scope.forChangeSR.serviceRequestIds);
        }

        $scope.journal = {};
        $scope.bbb = {};

        $scope.servicechange = function(serviceRequest){
            $scope.bbb = serviceRequest;
        };

        /**
         * 服务请求全部失效
         */
        $scope.serviceClosedAll=function(){
            $scope.journal.changeState = 0;
            $scope.journal.operatorId = "d96ef6e0-548a-11e5-9e04-74d4359b657c"  //操作人id
            if($scope.isAllChecked) {//全选
                $scope.forChangeSR.serviceRequestState = 0;
                $scope.forChangeSR.serviceRequestJournal = $scope.journal;
                $http.post(url + '/ServiceRequest/changeServiceRequestStateByIds', {ServiceRequest: $scope.forChangeSR})
                    .success(function (data) {
                        console.log(data);
                        alert(data.Info.info.$);

                    })
                    .error(function () {
                        alert("失效操作失败，请稍后重试!");
                    });
                $scope.isAllChecked = false;//全选失效
                $scope.journal = {};
            }
        };
        /**
         * 服务请求失效
         */
        $scope.serviceClosed = function(){
            if($scope.bbb.serviceRequestState == 0){
                alert("服务请求已经是关闭状态!");
                return;
            }
            $scope.journal.serviceRequestId = $scope.bbb.serviceRequestId;
            $scope.journal.changeState = 0;
            $scope.journal.operatorId = "d96ef6e0-548a-11e5-9e04-74d4359b657c"  //操作人id
            $http.put(url + "/ServiceRequest/changeServiceState",{
                ServiceRequestJournal : $scope.journal
            }).success(function(data){
                $scope.journal.remarks = "";
                alert(data.Info.info.$);
                $scope.load();
                $scope.journal = {};

            }).error(function(){
                alert("关闭操作失败，请稍后重试!")
                $scope.journal.remarks = "";
            });
        };
        /**
         * 服务请求全部完成
         */
        $scope.serviceFinishAll = function(){
            $scope.journal.changeState = 3;
            $scope.journal.operatorId = "d96ef6e0-548a-11e5-9e04-74d4359b657c" ; //操作人id
            if($scope.isAllChecked){//全选
                $scope.forChangeSR.serviceRequestState = 3;
                $scope.forChangeSR.serviceRequestJournal=$scope.journal;
                $http.post(url+'/ServiceRequest/changeServiceRequestStateByIds',{ServiceRequest:$scope.forChangeSR})
                    .success(function(data){
                        console.log(data);
                        alert(data.Info.info.$);
                    })
                    .error(function(){
                        alert("完成操作失败，请稍后重试!");
                    });
                $scope.isAllChecked=false;//全选失效
                $scope.journal = {};
            }

        };
        /**
         * 服务请求完成
         */
        $scope.serviceFinish = function(){
            if($scope.bbb.serviceRequestState == 3){
                alert("服务请求已经是完成状态!");
                return;
            }
            $scope.journal.serviceRequestId = $scope.bbb.serviceRequestId;
            $scope.journal.changeState = 3;
            $scope.journal.operatorId = "d96ef6e0-548a-11e5-9e04-74d4359b657c"  //操作人id
            $http.put(url + "/ServiceRequest/changeServiceState",{
                ServiceRequestJournal : $scope.journal
            }).success(function(data){
                $scope.journal.remarks = "";
                alert(data.Info.info.$);
                $scope.load();
            }).error(function(){
                alert("完成操作失败，请稍后重试!")
                $scope.journal.remarks = "";
            });
        }

        //负责人信息
        $scope.Teamworkstaff = {page:{}};

        $scope.load1 = function(){
            var fetchFunction = function (page, callback) {
                $scope.Teamworkstaff.page = page;
                $http.post(url + '/Teamworkstaff/listPageTeamworkStaff',{Teamworkstaff:$scope.Teamworkstaff}).success(callback)

            };
            $scope.searchPaginator2 = app.get('Paginator').list(fetchFunction,5);
            console.log($scope.searchPaginator2);
        };
        $scope.load1();

        //判断checkbx是否选中
        $scope.d=false;
        $scope.getdata=function(item){
            var chk = document.getElementsByName("aaa");
            for(var i=0;i<chk.length;i++){
                if( chk[i].checked==true){
                    $scope.accountRecord=item;
                    $scope.d=true;
                    return;
                }else{
                    $scope.d=false;
                }
            }
        };

        $scope.addPerson=function(){
            $scope.person= $scope.accountRecord;
            console.log($scope.person)
        };

    }]);
});